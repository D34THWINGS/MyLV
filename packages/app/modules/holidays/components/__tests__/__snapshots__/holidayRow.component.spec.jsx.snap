// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`PeriodsList should render deleted partner text if no partner prop 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <HolidayRow
    classes={Object {}}
    disableMenu={false}
    displayPartnerName={true}
    holiday={
      Object {
        "date": "1942-01-01",
        "id": "bar",
        "periods": Array [],
        "status": "validated",
      }
    }
    onClick={[MockFunction]}
    onHolidayDelete={[MockFunction]}
    partner={
      Object {
        "firstName": "Foo",
        "lastName": "Bar",
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        <WithStyles(TableCell)
          className={undefined}
        >
          Foo Bar
        </WithStyles(TableCell)>,
        <WithStyles(TableCell)
          className={undefined}
        >
          01-01-1942
        </WithStyles(TableCell)>,
        <Hidden
          implementation="js"
          lgDown={false}
          lgUp={false}
          mdDown={true}
          mdUp={false}
          smDown={false}
          smUp={false}
          xlDown={false}
          xlUp={false}
          xsDown={false}
          xsUp={false}
        >
          <WithStyles(TableCell)
            numeric={true}
          />
          <WithStyles(TableCell)
            numeric={true}
          />
          <WithStyles(TableCell)
            numeric={true}
          />
        </Hidden>,
        <WithStyles(TableCell)>
          <HolidayRequestStatusIcon
            status="validated"
          />
        </WithStyles(TableCell)>,
      ],
      "className": undefined,
      "hover": true,
      "onClick": [MockFunction],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            "Foo Bar",
            undefined,
          ],
          "className": undefined,
        },
        "ref": null,
        "rendered": Array [
          "Foo Bar",
          undefined,
        ],
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": "01-01-1942",
          "className": undefined,
        },
        "ref": null,
        "rendered": "01-01-1942",
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": Array [
            <WithStyles(TableCell)
              numeric={true}
            />,
            <WithStyles(TableCell)
              numeric={true}
            />,
            <WithStyles(TableCell)
              numeric={true}
            />,
          ],
          "implementation": "js",
          "lgDown": false,
          "lgUp": false,
          "mdDown": true,
          "mdUp": false,
          "smDown": false,
          "smUp": false,
          "xlDown": false,
          "xlUp": false,
          "xsDown": false,
          "xsUp": false,
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": "paidHolidays",
            "nodeType": "class",
            "props": Object {
              "children": undefined,
              "numeric": true,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": "unpaidHolidays",
            "nodeType": "class",
            "props": Object {
              "children": undefined,
              "numeric": true,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": "conventionalHolidays",
            "nodeType": "class",
            "props": Object {
              "children": undefined,
              "numeric": true,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <HolidayRequestStatusIcon
            status="validated"
          />,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "status": "validated",
          },
          "ref": null,
          "rendered": null,
          "type": [MockFunction],
        },
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <WithStyles(TableCell)
            className={undefined}
          >
            Foo Bar
          </WithStyles(TableCell)>,
          <WithStyles(TableCell)
            className={undefined}
          >
            01-01-1942
          </WithStyles(TableCell)>,
          <Hidden
            implementation="js"
            lgDown={false}
            lgUp={false}
            mdDown={true}
            mdUp={false}
            smDown={false}
            smUp={false}
            xlDown={false}
            xlUp={false}
            xsDown={false}
            xsUp={false}
          >
            <WithStyles(TableCell)
              numeric={true}
            />
            <WithStyles(TableCell)
              numeric={true}
            />
            <WithStyles(TableCell)
              numeric={true}
            />
          </Hidden>,
          <WithStyles(TableCell)>
            <HolidayRequestStatusIcon
              status="validated"
            />
          </WithStyles(TableCell)>,
        ],
        "className": undefined,
        "hover": true,
        "onClick": [MockFunction],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              "Foo Bar",
              undefined,
            ],
            "className": undefined,
          },
          "ref": null,
          "rendered": Array [
            "Foo Bar",
            undefined,
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": "01-01-1942",
            "className": undefined,
          },
          "ref": null,
          "rendered": "01-01-1942",
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": Array [
              <WithStyles(TableCell)
                numeric={true}
              />,
              <WithStyles(TableCell)
                numeric={true}
              />,
              <WithStyles(TableCell)
                numeric={true}
              />,
            ],
            "implementation": "js",
            "lgDown": false,
            "lgUp": false,
            "mdDown": true,
            "mdUp": false,
            "smDown": false,
            "smUp": false,
            "xlDown": false,
            "xlUp": false,
            "xsDown": false,
            "xsUp": false,
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": "paidHolidays",
              "nodeType": "class",
              "props": Object {
                "children": undefined,
                "numeric": true,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": "unpaidHolidays",
              "nodeType": "class",
              "props": Object {
                "children": undefined,
                "numeric": true,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": "conventionalHolidays",
              "nodeType": "class",
              "props": Object {
                "children": undefined,
                "numeric": true,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <HolidayRequestStatusIcon
              status="validated"
            />,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "status": "validated",
            },
            "ref": null,
            "rendered": null,
            "type": [MockFunction],
          },
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`PeriodsList should render properly 1`] = `
<WithStyles(TableRow)
  hover={true}
  onClick={[MockFunction]}
>
  <WithStyles(TableCell)>
    <WithStyles(IconButton)
      key="menu-btn"
      onClick={[Function]}
    >
      <pure(MoreVertIcon) />
    </WithStyles(IconButton)>
    <WithStyles(Menu)
      anchorEl={null}
      id="holiday-menu-bar"
      key="menu-dropdown"
      onClose={[Function]}
      open={false}
    >
      <WithStyles(MenuItem)
        component={[Function]}
        onClick={[Function]}
        to="/holidays/bar/edit"
      >
        Éditer
      </WithStyles(MenuItem)>
      <WithStyles(MenuItem)
        onClick={[Function]}
      >
        Supprimer
      </WithStyles(MenuItem)>
    </WithStyles(Menu)>
  </WithStyles(TableCell)>
  <WithStyles(TableCell)>
    01-01-1942
  </WithStyles(TableCell)>
  <Hidden
    implementation="js"
    lgDown={false}
    lgUp={false}
    mdDown={true}
    mdUp={false}
    smDown={false}
    smUp={false}
    xlDown={false}
    xlUp={false}
    xsDown={false}
    xsUp={false}
  >
    <WithStyles(TableCell)
      key="paidHolidays"
      numeric={true}
    />
    <WithStyles(TableCell)
      key="unpaidHolidays"
      numeric={true}
    />
    <WithStyles(TableCell)
      key="conventionalHolidays"
      numeric={true}
    />
  </Hidden>
  <WithStyles(TableCell)>
    <HolidayRequestStatusIcon
      status="pending"
    />
  </WithStyles(TableCell)>
</WithStyles(TableRow)>
`;

exports[`PeriodsList should render with menu when click menu button 1`] = `
<WithStyles(TableRow)
  hover={true}
  onClick={[MockFunction]}
>
  <WithStyles(TableCell)>
    <WithStyles(IconButton)
      key="menu-btn"
      onClick={[Function]}
    >
      <pure(MoreVertIcon) />
    </WithStyles(IconButton)>
    <WithStyles(Menu)
      anchorEl="foo"
      id="holiday-menu-bar"
      key="menu-dropdown"
      onClose={[Function]}
      open={true}
    >
      <WithStyles(MenuItem)
        component={[Function]}
        onClick={[Function]}
        to="/holidays/bar/edit"
      >
        Éditer
      </WithStyles(MenuItem)>
      <WithStyles(MenuItem)
        onClick={[Function]}
      >
        Supprimer
      </WithStyles(MenuItem)>
    </WithStyles(Menu)>
  </WithStyles(TableCell)>
  <WithStyles(TableCell)>
    01-01-1942
  </WithStyles(TableCell)>
  <Hidden
    implementation="js"
    lgDown={false}
    lgUp={false}
    mdDown={true}
    mdUp={false}
    smDown={false}
    smUp={false}
    xlDown={false}
    xlUp={false}
    xsDown={false}
    xsUp={false}
  >
    <WithStyles(TableCell)
      key="paidHolidays"
      numeric={true}
    />
    <WithStyles(TableCell)
      key="unpaidHolidays"
      numeric={true}
    />
    <WithStyles(TableCell)
      key="conventionalHolidays"
      numeric={true}
    />
  </Hidden>
  <WithStyles(TableCell)>
    <HolidayRequestStatusIcon
      status="pending"
    />
  </WithStyles(TableCell)>
</WithStyles(TableRow)>
`;
